<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.agifac.maf.packaging</groupId>
	<artifactId>maf-desktop</artifactId>
	<version>12.0.1-SNAPSHOT</version>
	<name>Component "maf-desktop", of scope "com.agifac.maf.packaging"</name>
	<description>This is the component which manages the packaging of BizDock application</description>
	<packaging>pom</packaging>
	<url>https://prod.the-agile-factory.net/site/${project.groupId}/${project.artifactId}-${project.version}</url>
	<organization>
		<name>The Agile Factory</name>
		<url>http://www.the-agile-factory.com</url>
	</organization>

	<scm>
		<connection>scm:git:https://github.com/theAgileFactory/bizdock-packaging.git</connection>
		<developerConnection>scm:git:https://github.com/theAgileFactory/bizdock-packaging.git</developerConnection>
		<url>scm:git:https://github.com/theAgileFactory/bizdock-packaging.git</url>
		<tag>HEAD</tag>
	</scm>

	<ciManagement>
		<system>jenkins</system>
		<url>https://prod.the-agile-factory.net/jenkins/</url>
	</ciManagement>

	<issueManagement>
		<system>Redmine</system>
		<url>https://prod.the-agile-factory.net/</url>
	</issueManagement>

	<properties>
		<project.build.sourceEncoding>latin1</project.build.sourceEncoding>
		<maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
		<!-- Plugin properties -->
		<play.app.groupId>com.agifac.maf.desktop</play.app.groupId>
		<play.app.artifactId>maf-desktop-app</play.app.artifactId>
		<play.app.distSuffix>dist</play.app.distSuffix>
		<play.app.version>12.1.4-SNAPSHOT</play.app.version>
		<!-- Plugin properties -->
		<maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
		<maven-resources-plugin.version>2.6</maven-resources-plugin.version>
		<maven-assembly-plugin.version>2.2.1</maven-assembly-plugin.version>
        <maven-site-plugin.version>3.4</maven-site-plugin.version>
        <wagon-ssh.version>2.2</wagon-ssh.version>
	</properties>

	<distributionManagement>
		<snapshotRepository>
			<id>snapshots</id>
			<url>https://prod.the-agile-factory.net/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>releases</id>
			<url>https://prod.the-agile-factory.net/nexus/content/repositories/releases</url>
		</repository>
		<site>
			<id>site</id>
			<name>site</name>
			<url>scp://prod.the-agile-factory.net/var/www/html/${project.groupId}/${project.artifactId}-${project.version}</url>
		</site>
	</distributionManagement>

	<dependencies>
            <dependency>
                <groupId>${play.app.groupId}</groupId>
                <artifactId>${play.app.artifactId}</artifactId>
                <version>${play.app.version}</version>
		        <type>zip</type>
            </dependency>
	</dependencies>

	<build>
		<plugins>

		    <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-dependency-plugin</artifactId>
			<version>${maven-dependency-plugin.version}</version>
			<executions>
			  <execution>
			    <id>copy-dependencies</id>
			    <goals>
			      <goal>copy-dependencies</goal>
			    </goals>
			    <configuration>
			    </configuration>
			  </execution>
			</executions>
		      </plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<phase>process-resources</phase>
						<configuration>
							<outputDirectory> ${project.build.directory}/classes </outputDirectory>
							<resources>
								<resource>
									<directory> ${basedir}/src/main/resources </directory>
									<excludes>
										<excludes>.svn</excludes>
										<excludes>**/.svn</excludes>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-properties</id>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<phase>process-resources</phase>
						<configuration>
							<outputDirectory> ${project.build.directory}/properties </outputDirectory>
							<resources>
								<resource>
									<directory> ${basedir}/src/main/properties </directory>
									<includes>
										<include>*.properties</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Management of the enterprise dependencies -->
			  <plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-antrun-plugin</artifactId>
			    <version>${maven-antrun-plugin.version}</version>
			    <executions>
			      <execution>
				<id>repack</id>
				<phase>compile</phase>
				<goals>
				  <goal>run</goal>
				</goals>
				<configuration>
				  <target>
					<!-- unzip the main app -->
					<unzip src="${project.build.directory}/dependency/${play.app.artifactId}-${play.app.version}.zip" dest="${project.build.directory}/tmp" />

					<!--WEBJARS -->

					<!-- unzip the assets and create a lib folder -->
				    	<unzip src="${project.build.directory}/tmp/maf-desktop-app-dist/lib/${play.app.artifactId}.${play.app.artifactId}-dist-assets.jar" dest="${project.build.directory}/tmp2" />
					<mkdir dir="${project.build.directory}/tmp2/public/lib" />

					<!-- Example
					<unzip src="${project.build.directory}/dependency/${webjars.xxx.artifactId}-${webjars.xxx.version}.jar" dest="${project.build.directory}/tmp3" />
				    	<move todir="${project.build.directory}/tmp2/public/lib/${webjars.xxx.artifactId}">
    						<fileset dir="${project.build.directory}/tmp3/META-INF/resources/webjars/${webjars.xxx.artifactId}/${webjars.xxx.version}" />
  					</move> -->

					<!-- zip the assets -->
					<zip basedir="${project.build.directory}/tmp2" destfile="${project.build.directory}/tmp/maf-desktop-app-dist/lib/${play.app.artifactId}.${play.app.artifactId}-dist-assets.jar" />

					<!--OTHER DEPEDENCIES (add to app + classpath) -->

				    	<!-- Example
					<copy file="${project.build.directory}/dependency/${dep.artifactId}-${dep.version}.jar" tofile="${project.build.directory}/tmp/maf-desktop-app-dist/lib/${dep.artifactId}-${dep.version}.jar" />
				    	<replaceregexp match='declare -r app_classpath="' replace='declare -r app_classpath="$lib_dir/${dep.artifactId}-${dep.version}.jar:' flags="g" byline="true">
					    <fileset dir="${project.build.directory}/tmp/maf-desktop-app-dist/bin" includes="maf-desktop-app" />
				    	</replaceregexp> -->

					<!-- zip the main app -->
				    	<zip basedir="${project.build.directory}/tmp" destfile="${project.build.directory}/dependency/${play.app.artifactId}-${play.app.version}-with-dep.zip" />
				  </target>
				</configuration>
			      </execution>
			    </executions>
			  </plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven-assembly-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>single</goal>
						</goals>
						<id>assembly of properties</id>
						<phase>compile</phase>
						<configuration>
							<archiveBaseDirectory> ${project.build.directory} </archiveBaseDirectory>
							<descriptors>
								<descriptor> src/main/assembly/properties.xml </descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<goals>
							<goal>single</goal>
						</goals>
						<id>assembly of resources</id>
						<phase>package</phase>
						<configuration>
							<appendAssemblyId>false</appendAssemblyId>
							<attach>true</attach>
							<archiveBaseDirectory> ${project.build.directory} </archiveBaseDirectory>
							<descriptors>
								<descriptor> src/main/assembly/resources.xml </descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven-site-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.wagon</groupId>
						<artifactId>wagon-ssh</artifactId>
						<version>${wagon-ssh.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>${maven-project-info-reports-plugin.version}</version>
							<configuration>
								<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
								<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
							</configuration>
							<reports>
								<report>index</report>
								<report>issue-tracking</report>
								<report>summary</report>
								<report>dependencies</report>
								<report>scm</report>
								<report>cim</report>
								<report>distribution-management</report>
							</reports>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>versions-maven-plugin</artifactId>
							<version>${versions-maven-plugin.version}</version>
							<reports>
								<report>dependency-updates-report</report>
								<report>plugin-updates-report</report>
								<report>property-updates-report</report>
							</reports>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>
